{"version":3,"sources":["components/Header/Header.js","components/SidebarRow/SidebarRow.js","components/Sidebar/Sidebar.js","components/VideoCard/VideoCard.js","components/RecommendedVideos/RecommendedVideos.js","components/VideoInfo/VideoInfo.js","components/Video/Video.js","components/VideoPlayer/VideoPlayer.js","components/ChannelRow/ChannelRow.js","components/VideoRow/VideoRow.js","components/SearchPage/SearchPage.js","App.js","reportWebVitals.js","index.js"],"names":["Header","useState","inputSearch","setInputSearch","className","Menu","to","src","alt","type","onChange","e","target","value","Search","VideoCall","Apps","Notifications","Avatar","SidebarRow","selected","Icon","title","Sidebar","Home","Whatshot","Subscriptions","VideoLibrary","History","OndemandVideo","WatchLater","ThumbUp","VideoCard","image","channel","views","timestamp","channelImage","RecommendedVideos","videoCards","setVideoCards","isLoading","setIsLoading","isError","setIsError","videoItems","a","newVideoCards","video","videoId","id","snippet","channelId","axios","get","process","response","data","items","thumbnails","medium","url","statistics","viewCount","DateTime","fromISO","publishedAt","toRelative","channelTitle","push","useEffect","then","createVideoCards","catch","error","console","Alert","severity","CircularProgress","color","map","item","VideoInfo","description","publishedDate","likeCount","dislikeCount","subs","ThumbDown","Reply","PlaylistAdd","MoreHoriz","Button","Video","opts","height","width","VideoPlayer","useParams","videoInfo","setVideoInfo","stats","subscriberCount","Date","toLocaleDateString","day","month","year","log","createVideoInfo","ChannelRow","noOfVideos","VideoRow","SearchPage","props","searchQuery","channelRow","setChannelRow","videoRows","setVideoRows","videoCount","videos","newVideoRows","createChannelRow","createVideoRows","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2e76f5f2.chunk.js","sourcesContent":["import { Avatar } from '@material-ui/core'\r\nimport { Apps, Menu, Notifications, Search, VideoCall } from '@material-ui/icons'\r\nimport React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './Header.css'\r\n\r\n\r\nfunction Header() {\r\n    const [inputSearch, setInputSearch] = useState('');\r\n    return (\r\n        <div className=\"header\">\r\n            <div className=\"header__left\">\r\n                <Menu />\r\n                <Link to='/'>\r\n                    <img \r\n                        className=\"header__logo\"\r\n                        src=\"https://upload.wikimedia.org/wikipedia/commons/e/e1/Logo_of_YouTube_%282015-2017%29.svg\"\r\n                        alt=''\r\n                    />\r\n                </Link>\r\n            </div>\r\n            <div className=\"header__center\">\r\n                <input type=\"text\" onChange={(e) => setInputSearch(e.target.value)} value={inputSearch} />\r\n                <Link to={`/search/${inputSearch}`}>\r\n                    <Search className='header__searchbutton' />\r\n                </Link>\r\n            </div>\r\n            <div className=\"header__right\">\r\n                <VideoCall className='header__icon' />\r\n                <Apps className='header__icon' />\r\n                <Notifications className='header__icon' />\r\n                <Avatar \r\n                    alt='Bhakti Budiman Novanda'\r\n                    src='https://media-exp1.licdn.com/dms/image/C5603AQFMZJdbgdYAUg/profile-displayphoto-shrink_200_200/0?e=1609977600&v=beta&t=OBGpDKwwTN3IFOwdWOT8X_QCbuRn0w6KMMVLTqett8U'\r\n                />\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport './SidebarRow.css'\r\n\r\nconst SidebarRow = ({selected, Icon, title}) => {\r\n    return (\r\n        <div className={`sidebarrow ${selected ? 'selected': ''}`}>\r\n            <Icon className='sidebarrow__icon' />\r\n            <h2 className='sidebarrow__title'>{title}</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SidebarRow\r\n","import React from 'react'\r\nimport './Sidebar.css'\r\nimport SidebarRow from './../SidebarRow/SidebarRow';\r\nimport { History, Home, OndemandVideo, Subscriptions, ThumbUp, VideoLibrary, WatchLater, Whatshot } from '@material-ui/icons';\r\n\r\nfunction Sidebar() {\r\n    return (\r\n        <div className=\"sidebar\">\r\n            <SidebarRow selected Icon={Home} title='Home' />\r\n            <SidebarRow Icon={Whatshot} title='Trending' />\r\n            <SidebarRow Icon={Subscriptions} title='Subscription' />\r\n            <hr />\r\n            <SidebarRow Icon={VideoLibrary} title='Library' />\r\n            <SidebarRow Icon={History} title='History' />\r\n            <SidebarRow Icon={OndemandVideo} title='Your videos' />\r\n            <SidebarRow Icon={WatchLater} title='Watch later' />\r\n            <SidebarRow Icon={ThumbUp} title='Liked videos' />\r\n            <hr />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n","import { Avatar } from '@material-ui/core'\r\nimport React from 'react'\r\nimport './VideoCard.css'\r\n\r\nconst VideoCard = ({image, title, channel, views, timestamp, channelImage}) => {\r\n    return (\r\n        <div className='videocard'>\r\n            <img className='videocard__image' src={image} alt='' />\r\n            <div className='videocard__info'>\r\n                <Avatar \r\n                    className='videocard__avatar'\r\n                    alt={channel}\r\n                    src={channelImage}\r\n                />\r\n                <div className='videocard__text'>\r\n                    <h4>{title}</h4>\r\n                    <p>{channel}</p>\r\n                    <p>{views} views • {timestamp}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VideoCard\r\n","import { CircularProgress } from '@material-ui/core'\r\nimport { Alert } from '@material-ui/lab';\r\nimport axios from 'axios'\r\nimport {DateTime} from 'luxon';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport VideoCard from '../VideoCard/VideoCard'\r\nimport './RecommendedVideos.css'\r\n\r\nfunction RecommendedVideos() {\r\n\r\n    const [videoCards, setVideoCards] = useState([])\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const [isError, setIsError] = useState(false)\r\n\r\n    useEffect(() => {\r\n        axios\r\n            .get(`https://www.googleapis.com/youtube/v3/videos?part=snippet%2CcontentDetails%2Cstatistics&chart=mostPopular&maxResults=10&regionCode=ID&key=${process.env.REACT_APP_YOUTUBE_API_KEY}`)\r\n            .then(response => {\r\n                createVideoCards(response.data.items)\r\n            })\r\n            .catch(error => {\r\n                console.error(error)\r\n                setIsError(true)\r\n            })\r\n    }, [])\r\n\r\n    async function createVideoCards(videoItems) {\r\n        let newVideoCards = []\r\n        for(const video of videoItems) {\r\n            const videoId = video.id;\r\n            const snippet = video.snippet;\r\n            const channelId = snippet.channelId;\r\n            const response = await axios\r\n                                    .get(`https://www.googleapis.com/youtube/v3/channels?part=snippet&id=${channelId}&key=${process.env.REACT_APP_YOUTUBE_API_KEY}`)\r\n            const channelImage = response.data.items[0].snippet.thumbnails.medium.url;\r\n\r\n            const title = snippet.title;\r\n            const image = snippet.thumbnails.medium.url;\r\n            const views = video.statistics.viewCount;\r\n            const timestamp = DateTime.fromISO(snippet.publishedAt).toRelative();\r\n            const channel = snippet.channelTitle;\r\n\r\n            newVideoCards.push({\r\n                videoId,\r\n                image,\r\n                title,\r\n                channel,\r\n                views,\r\n                timestamp,\r\n                channelImage\r\n            })\r\n        }\r\n        setVideoCards(newVideoCards)\r\n        setIsLoading(false)\r\n    }\r\n\r\n    if(isError){\r\n        return <Alert severity=\"error\" className='loading'>No Results found!</Alert>\r\n    }\r\n\r\n    return (\r\n        <div className=\"recommendedvideos\">\r\n            {isLoading ? <CircularProgress className='loading' color='secondary' /> : null }\r\n            <div className='recommendedvideos__videos'>\r\n                {\r\n                    videoCards.map(item => {\r\n                        return (\r\n                            <Link key={item.videoId} to={`/video/${item.videoId}`}>\r\n                                <VideoCard \r\n                                    key={item.videoId}\r\n                                    title={item.title}\r\n                                    image={item.image}\r\n                                    views={item.views}\r\n                                    timestamp={item.timestamp}\r\n                                    channel={item.channel}\r\n                                    channelImage={item.channelImage}\r\n                                />\r\n                            </Link>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RecommendedVideos\r\n","import { Avatar, Button } from '@material-ui/core';\r\nimport { MoreHoriz, PlaylistAdd, Reply, ThumbDown, ThumbUp } from '@material-ui/icons';\r\nimport React from 'react'\r\nimport SidebarRow from './../SidebarRow/SidebarRow';\r\nimport './VideoInfo.css'\r\n\r\nconst VideoInfo = ({title, description, publishedDate, channelTitle, channelImage, viewCount, likeCount, dislikeCount, subs}) => {\r\n    return (\r\n        <div className='videoinfo'>\r\n            <div className='videoinfo__headline'>\r\n                <h1>{title}</h1>\r\n            </div>\r\n            <div className='videoinfo__stats'>\r\n                <p>{viewCount} views • {publishedDate}</p>\r\n                <div className='videoinfo__likes'>\r\n                    <SidebarRow Icon={ThumbUp} title={likeCount} />\r\n                    <SidebarRow Icon={ThumbDown} title={dislikeCount} />\r\n                    <SidebarRow Icon={Reply} title='SHARE' />\r\n                    <SidebarRow Icon={PlaylistAdd} title='SAVE' />\r\n                    <SidebarRow Icon={MoreHoriz} title='' />\r\n                </div>\r\n            </div>\r\n            <hr />\r\n            <div className='videoinfo__channel'>\r\n                <div>\r\n                    <Avatar \r\n                        className='videoinfo__avatar'\r\n                        alt={channelTitle}\r\n                        src={channelImage}\r\n                    />\r\n                    <div className='videoinfo__channelinfo'>\r\n                        <h3 className='videoinfo__channeltitle'>{channelTitle}</h3>\r\n                        <p className='videoinfo__channelsubs'>{subs} subscribers</p>\r\n                    </div>\r\n                </div>\r\n                <div className='videoinfo__subscribe'>\r\n                    <Button color='secondary' >SUBSCRIBE</Button>\r\n                </div>\r\n            </div>\r\n            <div className='videoinfo__channeldesc'>\r\n                <p>{description}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VideoInfo\r\n","import React from 'react'\r\nimport YouTube from 'react-youtube'\r\n\r\nconst Video = ({videoId}) => {\r\n    const opts = {\r\n        height: '390',\r\n        width: '640',\r\n    };\r\n    return (\r\n        <div>\r\n            <YouTube \r\n                opts={opts}\r\n                videoId={videoId}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Video\r\n","import { CircularProgress } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\nimport axios from 'axios';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router'\r\nimport RecommendedVideos from '../RecommendedVideos/RecommendedVideos';\r\nimport VideoInfo from './../VideoInfo/VideoInfo';\r\nimport Video from './../Video/Video';\r\nimport './VideoPlayer.css'\r\n\r\nconst VideoPlayer = () => {\r\n\r\n    let { videoId } = useParams();\r\n\r\n    const [videoInfo, setVideoInfo] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [isError, setIsError] = useState(false)\r\n\r\n    useEffect(() => {\r\n        setVideoInfo([])\r\n        setIsLoading(true)\r\n        axios\r\n            .get(`https://www.googleapis.com/youtube/v3/videos?part=snippet%2C%20statistics&id=${videoId}&key=${process.env.REACT_APP_YOUTUBE_API_KEY}`)\r\n            .then(response => {\r\n                console.log(response)\r\n                setIsError(false)\r\n                createVideoInfo(response.data['items'][0])\r\n            })\r\n            .catch(error => {\r\n                setIsError(true)\r\n            })\r\n    }, [])\r\n\r\n    async function createVideoInfo (video) {\r\n        const snippet = video.snippet;\r\n        const stats = video.statistics;\r\n        const channelId = snippet.channelId;\r\n        const response = await axios.get(`https://www.googleapis.com/youtube/v3/channels?part=snippet%2C%20statistics&id=${channelId}&key=${process.env.REACT_APP_YOUTUBE_API_KEY}`)\r\n\r\n        const channelImage = response.data.items[0].snippet.thumbnails.medium.url;\r\n        const subs = response.data.items[0].statistics.subscriberCount;\r\n        const publishedDate = new Date(snippet.publishedAt).toLocaleDateString('en-GB', {\r\n            day: 'numeric',\r\n            month: 'short',\r\n            year: 'numeric'\r\n        })\r\n\r\n        const title = snippet.title\r\n        const description = snippet.description\r\n        const channelTitle = snippet.channelTitle\r\n        const viewCount = stats.viewCount;\r\n        const likeCount = stats.likeCount;\r\n        const dislikeCount = stats.dislikeCount;\r\n\r\n        setVideoInfo({\r\n            title,\r\n            description,\r\n            publishedDate,\r\n            channelTitle,\r\n            channelImage,\r\n            viewCount,\r\n            likeCount,\r\n            dislikeCount,\r\n            subs\r\n        })\r\n\r\n        setIsLoading(false)\r\n    }\r\n\r\n    if(isError){\r\n        return <Alert severity='error' className='loading'>No Results found!</Alert>\r\n    }\r\n\r\n    return (\r\n        <div className='videoplayer'>\r\n            <div className='videoplayer__videodetails'>\r\n                <div className='videoplayer__video'>\r\n                    {isLoading ? <CircularProgress className='loading' color='secondary' /> : <Video videoId={videoId} />}\r\n                </div>\r\n                <div className='videoplayer__videoinfo'>\r\n                    {\r\n                        !isLoading ? <VideoInfo \r\n                                        title={videoInfo.snippet}\r\n                                        description={videoInfo.description}\r\n                                        publishedDate={videoInfo.publishedDate}\r\n                                        channelTitle={videoInfo.channelTitle}\r\n                                        channelImage={videoInfo.channelImage}\r\n                                        viewCount={videoInfo.viewCount}\r\n                                        likeCount={videoInfo.likeCount}\r\n                                        dislikeCount={videoInfo.dislikeCount}\r\n                                        subs={videoInfo.subs}\r\n                        /> : null\r\n                    }\r\n                </div>\r\n            </div>\r\n            <div className='videoplayer__suggested'>\r\n                <RecommendedVideos />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VideoPlayer\r\n","import { Avatar } from '@material-ui/core'\r\nimport React from 'react'\r\nimport './ChannelRow.css'\r\n\r\n\r\nconst ChannelRow = ({image, channel, subs, noOfVideos, description}) => {\r\n    return (\r\n        <div className='channelrow'>\r\n            <Avatar \r\n                className='channelrow__logo'\r\n                alt={channel}\r\n                src={image}\r\n            />\r\n            <div className='channelrow__text'>\r\n                <h4>{channel}</h4>\r\n                <p>{subs} subscribers • {noOfVideos} videos</p>\r\n                <p>{description}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChannelRow\r\n","import React from 'react'\r\nimport './VideoRow.css'\r\n\r\nconst VideoRow = ({views, description, timestamp, channel, title, image}) => {\r\n    return (\r\n        <div className='videorow'>\r\n            <img src={image} alt='' />\r\n            <div className='videorow__text'>\r\n                <h3>{title}</h3>\r\n                <p className='videorow__headline'>\r\n                    {channel} • {views} views • {timestamp}\r\n                </p>\r\n                <p className='videorow__description'>\r\n                    {description}\r\n                </p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VideoRow\r\n","import React, { useState, useEffect } from 'react'\r\nimport './SearchPage.css'\r\nimport TuneIcon from '@material-ui/icons/Tune';\r\nimport ChannelRow from './../ChannelRow/ChannelRow';\r\nimport VideoRow from './../VideoRow/VideoRow';\r\nimport {useParams} from 'react-router';\r\nimport axios from 'axios';\r\nimport {DateTime} from 'luxon';\r\nimport { Link } from 'react-router-dom';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\n\r\nconst SearchPage = (props) => {\r\n    let { searchQuery } = useParams();\r\n    \r\n    const [channelRow, setChannelRow] = useState('');\r\n    const [videoRows, setVideoRows] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [isError, setIsError] = useState(false);\r\n\r\n    useEffect(() => {\r\n      setChannelRow('');\r\n      setVideoRows([]);\r\n      axios\r\n        .get(`https://www.googleapis.com/youtube/v3/search?part=snippet&maxResults=1&type=channel&q=${searchQuery}&safeSearch=none&key=${process.env.REACT_APP_YOUTUBE_API_KEY}`)\r\n        .then(response => {\r\n          createChannelRow(response.data['items'][0]);\r\n        })\r\n        \r\n\r\n        axios\r\n        .get(`https://www.googleapis.com/youtube/v3/search?part=snippet&maxResults=9&type=video&q=${searchQuery}&safeSearch=none&key=${process.env.REACT_APP_YOUTUBE_API_KEY}`)\r\n        .then(response => {\r\n          createVideoRows(response.data['items']);\r\n          setIsError(false);\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n          setIsError(true);\r\n          setIsLoading(false);\r\n        })\r\n\r\n    }, [searchQuery])\r\n\r\n\r\n    async function createChannelRow(channel) {\r\n      const channelId = channel.id.channelId;\r\n      const response = await axios\r\n                              .get(`https://www.googleapis.com/youtube/v3/channels?part=statistics&id=${channelId}&key=${process.env.REACT_APP_YOUTUBE_API_KEY}`)\r\n      const noOfVideos = response.data.items[0].statistics.videoCount;\r\n      const subs = response.data.items[0].statistics.subscriberCount;\r\n      const snippet = channel.snippet;\r\n      const title = snippet.title;\r\n      const description = snippet.description;\r\n      const image = snippet.thumbnails.medium.url;\r\n      setChannelRow({\r\n        channelId,\r\n        image,\r\n        title,\r\n        subs,\r\n        noOfVideos,\r\n        description\r\n      });\r\n    }\r\n\r\n    async function createVideoRows(videos) {\r\n      let newVideoRows = [];\r\n      for (const video of videos) {\r\n        const videoId = video.id.videoId;\r\n        const response = await axios\r\n                                .get(`https://www.googleapis.com/youtube/v3/videos?part=statistics%2C%20snippet&id=${videoId}&key=${process.env.REACT_APP_YOUTUBE_API_KEY}`)\r\n        const views = response.data.items[0].statistics.viewCount;\r\n        const snippet = video.snippet;\r\n        const title = snippet.title;\r\n        const timestamp = DateTime.fromISO(snippet.publishedAt).toRelative();\r\n        const channel = snippet.channelTitle;\r\n        const description = snippet.description;\r\n        const image = snippet.thumbnails.medium.url;\r\n                            \r\n        newVideoRows.push({\r\n          videoId,\r\n          title,\r\n          image,\r\n          views,\r\n          timestamp,\r\n          channel, \r\n          description\r\n        });\r\n      };\r\n      setVideoRows(newVideoRows);\r\n      setIsLoading(false);\r\n    }\r\n    if (isError) {\r\n      return <Alert severity=\"error\" className='loading'>No Results found!</Alert>\r\n    }\r\n    return (\r\n        <div className=\"searchpage\">\r\n            <div className=\"searchpage__filter\">\r\n                <TuneIcon />\r\n                <h2>Filter</h2>\r\n            </div>\r\n            { isLoading ? <CircularProgress className='loading' color='secondary' /> : null }\r\n            <hr />\r\n            { !isLoading ? <ChannelRow \r\n                                  key={channelRow.channelId}\r\n                                  image={channelRow.image}\r\n                                  channel={channelRow.title}\r\n                                  subs={channelRow.subs}\r\n                                  noOfVideos={channelRow.noOfVideos}\r\n                                  description={channelRow.description}\r\n                            /> : null\r\n            }\r\n            <hr />\r\n            {\r\n              videoRows.map(item => {\r\n                return (\r\n                        <Link key={item.videoId} to={`/video/${item.videoId}`}>\r\n                          <VideoRow\r\n                            title={item.title}\r\n                            image={item.image}\r\n                            views={item.views}\r\n                            timestamp={item.timestamp}\r\n                            channel={item.channel}\r\n                            description={item.description}\r\n                          />\r\n                        </Link>\r\n                )\r\n              })\r\n              \r\n            }   \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchPage\r\n","import React from 'react'\nimport './App.css';\nimport {BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport Header from './components/Header/Header';\nimport Sidebar from './components/Sidebar/Sidebar';\nimport RecommendedVideos from './components/RecommendedVideos/RecommendedVideos';\nimport VideoPlayer from './components/VideoPlayer/VideoPlayer';\nimport SearchPage from './components/SearchPage/SearchPage';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Header />\n        <Switch>\n          <Route path='/video/:videoId'>\n            <div className='app__mainpage'>\n              <VideoPlayer />\n            </div>\n          </Route>\n          <Route path='/search/:searchQuery'>\n            <div className='app__mainpage'>\n              <Sidebar />\n              <SearchPage />\n            </div>\n          </Route>\n          <Route path='/'>\n            <div className='app__mainpage'>\n              <Sidebar />\n              <RecommendedVideos />\n            </div>\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}